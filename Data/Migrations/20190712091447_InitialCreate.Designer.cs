// <auto-generated />
using System;
using Data;
using GeoAPI.Geometries;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(StoreLocatorContext))]
    [Migration("20190712091447_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnName("address1")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address2")
                        .HasColumnName("address2")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address3")
                        .HasColumnName("address3")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BookingUrl")
                        .HasColumnName("booking_url")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Created")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("FridayHoursClosed")
                        .HasColumnName("fri_hrs_o")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FridayHoursOpen")
                        .HasColumnName("fri_hrs_c")
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("Latitude")
                        .HasColumnName("lat");

                    b.Property<IPoint>("Location")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("location")
                        .HasComputedColumnSql("case when [lat] is null or [lng] is null then null else geography::Point([lat], [lng], 4326) end persisted");

                    b.Property<double?>("Longitude")
                        .HasColumnName("lng");

                    b.Property<string>("MondayHoursClosed")
                        .HasColumnName("mon_hrs_c")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MondayHoursOpen")
                        .HasColumnName("mon_hrs_o")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PostalCode")
                        .HasColumnName("postal_code")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SaturdayHoursClosed")
                        .HasColumnName("sat_hrs_o")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SaturdayHoursOpen")
                        .HasColumnName("sat_hrs_c")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("StoreTypeId")
                        .HasColumnName("type_id");

                    b.Property<string>("SundayHoursClosed")
                        .HasColumnName("sun_hrs_c")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SundayHoursOpen")
                        .HasColumnName("sun_hrs_o")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ThursdayHoursClosed")
                        .HasColumnName("thu_hrs_o")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ThursdayHoursOpen")
                        .HasColumnName("thu_hrs_c")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TuesdayHoursClosed")
                        .HasColumnName("tue_hrs_o")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TuesdayHoursOpen")
                        .HasColumnName("tue_hrs_c")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("WednesdayHoursClosed")
                        .HasColumnName("wed_hrs_o")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("WednesdayHoursOpen")
                        .HasColumnName("wed_hrs_c")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("StoreTypeId");

                    b.ToTable("sl_stores");
                });

            modelBuilder.Entity("Data.Models.StoreType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<short?>("Weight")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("sl_types");
                });

            modelBuilder.Entity("Data.Models.Store", b =>
                {
                    b.HasOne("Data.Models.StoreType", "StoreType")
                        .WithMany()
                        .HasForeignKey("StoreTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
